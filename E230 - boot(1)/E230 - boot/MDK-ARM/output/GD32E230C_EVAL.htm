<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\GD32E230C_EVAL.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\GD32E230C_EVAL.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6140002: Last Updated: Thu Jul 15 19:09:32 2021
<BR><P>
<H3>Maximum Stack Usage =       4380 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Boot_ParseReceiveModbusData &rArr; GD32E230BOOT_UpGradePayloadProcess &rArr; GD32E230BOOT_EraseUpgradeFlag &rArr; GDFLASHOP_WriteData2SpecifiedFlash &rArr; fmc_word_program &rArr; fmc_ready_wait &rArr; fmc_state_get
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC_CMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC_CMP_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[25]">Boot_ParseReceiveModbusData</a> from main.o(.text.Boot_ParseReceiveModbusData) referenced from main.o(.text.GD32E230BOOT_ResourceInit)
 <LI><a href="#[26]">CB_DisplayLedBlink</a> from main.o(.text.CB_DisplayLedBlink) referenced from main.o(.text.GD32E230BOOT_ResourceInit)
 <LI><a href="#[e]">DMA_Channel0_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[f]">DMA_Channel1_2_IRQHandler</a> from dmaconfig.o(.text.DMA_Channel1_2_IRQHandler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[10]">DMA_Channel3_4_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[9]">FMC_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[27]">GD32E230BOOT_1sOverTimePorcess</a> from main.o(.text.GD32E230BOOT_1sOverTimePorcess) referenced from main.o(.text.GD32E230BOOT_ResourceInit)
 <LI><a href="#[28]">GD32E23X_Modbus_ModbusTimer</a> from usart.o(.text.GD32E23X_Modbus_ModbusTimer) referenced from usart.o(.text.USART0_IRQHandler)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32e230_it.o(.text.HardFault_Handler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[20]">I2C0_ER_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1a]">I2C0_EV_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[21]">I2C1_ER_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1b]">I2C1_EV_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[7]">LVD_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32e230_it.o(.text.NMI_Handler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from gd32e230_it.o(.text.PendSV_Handler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[a]">RCU_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1c]">SPI0_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from gd32e230_it.o(.text.SVC_Handler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from gd32e230_systick.o(.text.SysTick_Handler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_gd32e230.o(.text.SystemInit) referenced from startup_gd32e230.o(.text)
 <LI><a href="#[12]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[13]">TIMER0_Channel_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[16]">TIMER13_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[17]">TIMER14_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[18]">TIMER15_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[19]">TIMER16_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[14]">TIMER2_IRQHandler</a> from usart.o(.text.TIMER2_IRQHandler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[15]">TIMER5_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1e]">USART0_IRQHandler</a> from usart.o(.text.USART0_IRQHandler) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[6]">WWDGT_IRQHandler</a> from startup_gd32e230.o(.text) referenced from startup_gd32e230.o(RESET)
 <LI><a href="#[24]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32e230.o(.text)
 <LI><a href="#[22]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(.text)
</UL>
<P><STRONG><a name="[92]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[93]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[94]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[95]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[96]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[97]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32e230.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_ConvertHex2Ascii
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_ModbusTimer
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_UpgradeResponseProcess
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_ConvertHex2Ascii
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_EraseUpgradeFlag
</UL>

<P><STRONG><a name="[9c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>COMMON_Bits16Convert2Bits8</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, commonfunctions.o(.text.COMMON_Bits16Convert2Bits8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = COMMON_Bits16Convert2Bits8
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_CommunicateResponseInformation
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_UpgradeResponseProcess
</UL>

<P><STRONG><a name="[30]"></a>COMMON_Bits8Convert2Bits16</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, commonfunctions.o(.text.COMMON_Bits8Convert2Bits16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = COMMON_Bits8Convert2Bits16
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[58]"></a>COMMON_Bits8Convert2Bits32</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, commonfunctions.o(.text.COMMON_Bits8Convert2Bits32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = COMMON_Bits8Convert2Bits32
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
</UL>

<P><STRONG><a name="[3d]"></a>COMMON_ConverAscii2CommonMode</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, commonfunctions.o(.text.COMMON_ConverAscii2CommonMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = COMMON_ConverAscii2CommonMode &rArr; COMMON_GeneratorLRCCheckCode
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_GeneratorLRCCheckCode
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Convert1Byteto4Bits
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_ModbusTimer
</UL>

<P><STRONG><a name="[3e]"></a>COMMON_Convert1Byteto4Bits</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, commonfunctions.o(.text.COMMON_Convert1Byteto4Bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = COMMON_Convert1Byteto4Bits
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_ConverAscii2CommonMode
</UL>

<P><STRONG><a name="[40]"></a>COMMON_ConvertHex2Ascii</STRONG> (Thumb, 240 bytes, Stack size 552 bytes, commonfunctions.o(.text.COMMON_ConvertHex2Ascii))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = COMMON_ConvertHex2Ascii
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_CommunicateResponseInformation
</UL>

<P><STRONG><a name="[3f]"></a>COMMON_GeneratorLRCCheckCode</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, commonfunctions.o(.text.COMMON_GeneratorLRCCheckCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = COMMON_GeneratorLRCCheckCode
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_ConverAscii2CommonMode
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_CommunicateResponseInformation
</UL>

<P><STRONG><a name="[60]"></a>COMMON_GeneratorU16bitsCRCCheckCode</STRONG> (Thumb, 136 bytes, Stack size 28 bytes, commonfunctions.o(.text.COMMON_GeneratorU16bitsCRCCheckCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = COMMON_GeneratorU16bitsCRCCheckCode
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_ModbusTimer
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_CommunicateResponseInformation
</UL>

<P><STRONG><a name="[f]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dmaconfig.o(.text.DMA_Channel1_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA_Channel1_2_IRQHandler &rArr; dma_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_get
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA_Rcv_TransDataParaConfig</STRONG> (Thumb, 208 bytes, Stack size 64 bytes, dmaconfig.o(.text.DMA_Rcv_TransDataParaConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DMA_Rcv_TransDataParaConfig &rArr; nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_transmit_config
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_struct_para_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_to_memory_disable
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_interrupt_disable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_enable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_circulation_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[53]"></a>GD32E230_Systick_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gd32e230_systick.o(.text.GD32E230_Systick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GD32E230_Systick_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_Systick_TimerControlInit
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
</UL>

<P><STRONG><a name="[2f]"></a>GD32E230_Systick_TimerKill</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, gd32e230_systick.o(.text.GD32E230_Systick_TimerKill))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GD32E230_Systick_TimerKill
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[8b]"></a>GD32E230_Systick_TimerProcess</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, gd32e230_systick.o(.text.GD32E230_Systick_TimerProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GD32E230_Systick_TimerProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>GD32E230_TimerSet</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gd32e230_systick.o(.text.GD32E230_TimerSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GD32E230_TimerSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
</UL>

<P><STRONG><a name="[31]"></a>GD32E23X_Modbus_UpgradeResponseProcess</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, usart.o(.text.GD32E23X_Modbus_UpgradeResponseProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = GD32E23X_Modbus_UpgradeResponseProcess &rArr; GD32E23X_Modbus_CommunicateResponseInformation &rArr; COMMON_ConvertHex2Ascii
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Bits16Convert2Bits8
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_CommunicateResponseInformation
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[3c]"></a>GDFLASHOP_EraseSpecifiedFlashPages</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, flash.o(.text.GDFLASHOP_EraseSpecifiedFlashPages))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GDFLASHOP_EraseSpecifiedFlashPages &rArr; fmc_page_erase &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_EraseUpgradeFlag
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ClearAppFlashArea
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[3b]"></a>GDFLASHOP_ReadDataFromChipFlash</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, flash.o(.text.GDFLASHOP_ReadDataFromChipFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GDFLASHOP_ReadDataFromChipFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_EraseUpgradeFlag
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_1sOverTimePorcess
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[51]"></a>GDFLASHOP_WriteData2SpecifiedFlash</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, flash.o(.text.GDFLASHOP_WriteData2SpecifiedFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GDFLASHOP_WriteData2SpecifiedFlash &rArr; fmc_word_program &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_EraseUpgradeFlag
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32e230_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e230_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e230_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32e230_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, gd32e230_systick.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, system_gd32e230.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemInit &rArr; system_clock_config &rArr; system_clock_72m_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, usart.o(.text.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIMER2_IRQHandler &rArr; timer_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_disable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_flag_get
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_flag_clear
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_counter_value_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART0_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, usart.o(.text.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART0_IRQHandler &rArr; GD32E230_TimerSet
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_get
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_TimerSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32e230.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USART_CommunicateInitial</STRONG> (Thumb, 396 bytes, Stack size 72 bytes, usart.o(.text.USART_CommunicateInitial))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = USART_CommunicateInitial &rArr; USART_CommunicateParaConfig &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateControlPinInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
</UL>

<P><STRONG><a name="[39]"></a>USART_CommunicateParaConfig</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, usart.o(.text.USART_CommunicateParaConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = USART_CommunicateParaConfig &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_rts_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_cts_config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_dma_receive_config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_1sOverTimePorcess
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[55]"></a>USART_ConfigPaserParameters</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, usart.o(.text.USART_ConfigPaserParameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ConfigPaserParameters
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
</UL>

<P><STRONG><a name="[61]"></a>USART_SendDataViaUSART0DmaChannel</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, usart.o(.text.USART_SendDataViaUSART0DmaChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART_SendDataViaUSART0DmaChannel &rArr; dma_channel_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_CommunicateResponseInformation
</UL>

<P><STRONG><a name="[34]"></a>USART_SendDataViaUSART0DmaChnIsBusy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usart.o(.text.USART_SendDataViaUSART0DmaChnIsBusy))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[78]"></a>USART_Timer2_Configuation</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, usart.o(.text.USART_Timer2_Configuation))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USART_Timer2_Configuation &rArr; timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_disable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_flag_clear
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_disable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_counter_value_config
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
</UL>

<P><STRONG><a name="[68]"></a>dma_channel_disable</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gd32e230_dma.o(.text.dma_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToUserApplication
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_init
</UL>

<P><STRONG><a name="[50]"></a>dma_channel_enable</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gd32e230_dma.o(.text.dma_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_channel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendDataViaUSART0DmaChannel
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[4a]"></a>dma_circulation_disable</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gd32e230_dma.o(.text.dma_circulation_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_circulation_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[4c]"></a>dma_circulation_enable</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, gd32e230_dma.o(.text.dma_circulation_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_circulation_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[38]"></a>dma_deinit</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, gd32e230_dma.o(.text.dma_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dma_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[49]"></a>dma_init</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, gd32e230_dma.o(.text.dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = dma_init &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[4e]"></a>dma_interrupt_disable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gd32e230_dma.o(.text.dma_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[4d]"></a>dma_interrupt_enable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gd32e230_dma.o(.text.dma_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[43]"></a>dma_interrupt_flag_clear</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gd32e230_dma.o(.text.dma_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>dma_interrupt_flag_get</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, gd32e230_dma.o(.text.dma_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dma_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_IRQHandler
</UL>

<P><STRONG><a name="[4b]"></a>dma_memory_to_memory_disable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32e230_dma.o(.text.dma_memory_to_memory_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dma_memory_to_memory_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[48]"></a>dma_struct_para_init</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, gd32e230_dma.o(.text.dma_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[85]"></a>dma_transfer_number_config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gd32e230_dma.o(.text.dma_transfer_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_transfer_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendDataViaUSART0DmaChannel
</UL>

<P><STRONG><a name="[75]"></a>dma_transfer_number_get</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, gd32e230_dma.o(.text.dma_transfer_number_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = dma_transfer_number_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>fmc_flag_clear</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gd32e230_fmc.o(.text.fmc_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
</UL>

<P><STRONG><a name="[65]"></a>fmc_lock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32e230_fmc.o(.text.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_WriteData2SpecifiedFlash
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
</UL>

<P><STRONG><a name="[64]"></a>fmc_page_erase</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gd32e230_fmc.o(.text.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fmc_page_erase &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
</UL>

<P><STRONG><a name="[89]"></a>fmc_ready_wait</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gd32e230_fmc.o(.text.fmc_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
</UL>

<P><STRONG><a name="[8a]"></a>fmc_state_get</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, gd32e230_fmc.o(.text.fmc_state_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fmc_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>

<P><STRONG><a name="[62]"></a>fmc_unlock</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gd32e230_fmc.o(.text.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_WriteData2SpecifiedFlash
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
</UL>

<P><STRONG><a name="[66]"></a>fmc_word_program</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gd32e230_fmc.o(.text.fmc_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = fmc_word_program &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_WriteData2SpecifiedFlash
</UL>

<P><STRONG><a name="[77]"></a>gpio_af_set</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, gd32e230_gpio.o(.text.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
</UL>

<P><STRONG><a name="[71]"></a>gpio_bit_reset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32e230_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateControlPinInit
</UL>

<P><STRONG><a name="[84]"></a>gpio_bit_set</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gd32e230_gpio.o(.text.gpio_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendDataViaUSART0DmaChannel
</UL>

<P><STRONG><a name="[5c]"></a>gpio_mode_set</STRONG> (Thumb, 144 bytes, Stack size 28 bytes, gd32e230_gpio.o(.text.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateControlPinInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_TestLedInit
</UL>

<P><STRONG><a name="[5d]"></a>gpio_output_options_set</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gd32e230_gpio.o(.text.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateControlPinInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_TestLedInit
</UL>

<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = main &rArr; GD32E230BOOT_ResourceInit &rArr; USART_CommunicateInitial &rArr; USART_CommunicateParaConfig &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_Systick_TimerProcess
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToUserApplication
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[46]"></a>nvic_irq_enable</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, gd32e230_misc.o(.text.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nvic_irq_enable &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[6b]"></a>nvic_vector_table_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32e230_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nvic_vector_table_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[91]"></a>rcu_clock_freq_get</STRONG> (Thumb, 640 bytes, Stack size 108 bytes, gd32e230_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[47]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32e230_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateControlPinInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_TestLedInit
</UL>

<P><STRONG><a name="[90]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32e230_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[8f]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gd32e230_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[6f]"></a>timer_counter_value_config</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e230_timer.o(.text.timer_counter_value_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_counter_value_config
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>timer_deinit</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, gd32e230_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = timer_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
</UL>

<P><STRONG><a name="[6e]"></a>timer_disable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e230_timer.o(.text.timer_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>timer_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e230_timer.o(.text.timer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_IRQHandler
</UL>

<P><STRONG><a name="[6d]"></a>timer_flag_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e230_timer.o(.text.timer_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>timer_flag_get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gd32e230_timer.o(.text.timer_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = timer_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>timer_init</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, gd32e230_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
</UL>

<P><STRONG><a name="[70]"></a>timer_interrupt_disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e230_timer.o(.text.timer_interrupt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>timer_interrupt_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gd32e230_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Channel1_2_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>timer_struct_para_init</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, gd32e230_timer.o(.text.timer_struct_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = timer_struct_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Timer2_Configuation
</UL>

<P><STRONG><a name="[79]"></a>usart_baudrate_set</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gd32e230_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[74]"></a>usart_data_receive</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, gd32e230_usart.o(.text.usart_data_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[37]"></a>usart_deinit</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gd32e230_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usart_deinit &rArr; rcu_periph_reset_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[67]"></a>usart_disable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e230_usart.o(.text.usart_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToUserApplication
</UL>

<P><STRONG><a name="[83]"></a>usart_dma_receive_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_dma_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_dma_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[4f]"></a>usart_dma_transmit_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_dma_transmit_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_dma_transmit_config
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
</UL>

<P><STRONG><a name="[81]"></a>usart_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, gd32e230_usart.o(.text.usart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = usart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[73]"></a>usart_flag_clear</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[72]"></a>usart_flag_get</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, gd32e230_usart.o(.text.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[7e]"></a>usart_hardware_flow_cts_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_hardware_flow_cts_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_hardware_flow_cts_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[7d]"></a>usart_hardware_flow_rts_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_hardware_flow_rts_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_hardware_flow_rts_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[82]"></a>usart_interrupt_enable</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gd32e230_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[7b]"></a>usart_parity_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_parity_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_parity_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[7f]"></a>usart_receive_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_receive_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_receive_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[7c]"></a>usart_stop_bit_set</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_stop_bit_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_stop_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[80]"></a>usart_transmit_config</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_transmit_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_transmit_config
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[7a]"></a>usart_word_length_set</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gd32e230_usart.o(.text.usart_word_length_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_word_length_set
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
</UL>

<P><STRONG><a name="[9f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[25]"></a>Boot_ParseReceiveModbusData</STRONG> (Thumb, 572 bytes, Stack size 80 bytes, main.o(.text.Boot_ParseReceiveModbusData))
<BR><BR>[Stack]<UL><LI>Max Depth = 4380<LI>Call Chain = Boot_ParseReceiveModbusData &rArr; GD32E230BOOT_UpGradePayloadProcess &rArr; GD32E230BOOT_EraseUpgradeFlag &rArr; GDFLASHOP_WriteData2SpecifiedFlash &rArr; fmc_word_program &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_deinit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendDataViaUSART0DmaChnIsBusy
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_ReadDataFromChipFlash
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_UpgradeResponseProcess
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_Systick_TimerKill
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Bits8Convert2Bits16
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToUserApplication
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_EraseUpgradeFlag
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ClearAppFlashArea
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.GD32E230BOOT_ResourceInit)
</UL>
<P><STRONG><a name="[26]"></a>CB_DisplayLedBlink</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, main.o(.text.CB_DisplayLedBlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CB_DisplayLedBlink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.GD32E230BOOT_ResourceInit)
</UL>
<P><STRONG><a name="[27]"></a>GD32E230BOOT_1sOverTimePorcess</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, main.o(.text.GD32E230BOOT_1sOverTimePorcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = GD32E230BOOT_1sOverTimePorcess &rArr; USART_CommunicateParaConfig &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateParaConfig
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_ReadDataFromChipFlash
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JumpToUserApplication
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.GD32E230BOOT_ResourceInit)
</UL>
<P><STRONG><a name="[32]"></a>GD32E230BOOT_ClearAppFlashArea</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(.text.GD32E230BOOT_ClearAppFlashArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GD32E230BOOT_ClearAppFlashArea &rArr; GDFLASHOP_EraseSpecifiedFlashPages &rArr; fmc_page_erase &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[35]"></a>GD32E230BOOT_EraseUpgradeFlag</STRONG> (Thumb, 124 bytes, Stack size 2088 bytes, main.o(.text.GD32E230BOOT_EraseUpgradeFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 2180<LI>Call Chain = GD32E230BOOT_EraseUpgradeFlag &rArr; GDFLASHOP_WriteData2SpecifiedFlash &rArr; fmc_word_program &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_WriteData2SpecifiedFlash
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_ReadDataFromChipFlash
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_EraseSpecifiedFlashPages
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[52]"></a>GD32E230BOOT_ResourceInit</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, main.o(.text.GD32E230BOOT_ResourceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = GD32E230BOOT_ResourceInit &rArr; USART_CommunicateInitial &rArr; USART_CommunicateParaConfig &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ConfigPaserParameters
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_TimerSet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_Systick_Config
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Rcv_TransDataParaConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_TestLedInit
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33]"></a>GD32E230BOOT_UpGradePayloadProcess</STRONG> (Thumb, 476 bytes, Stack size 2120 bytes, main.o(.text.GD32E230BOOT_UpGradePayloadProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 4300<LI>Call Chain = GD32E230BOOT_UpGradePayloadProcess &rArr; GD32E230BOOT_EraseUpgradeFlag &rArr; GDFLASHOP_WriteData2SpecifiedFlash &rArr; fmc_word_program &rArr; fmc_ready_wait &rArr; fmc_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDFLASHOP_WriteData2SpecifiedFlash
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Bits8Convert2Bits32
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Bits8Convert2Bits16
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpgradePackagePayloadDecoding
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_EraseUpgradeFlag
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[59]"></a>GD32E230BOOT_UpgradePackagePayloadDecoding</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, main.o(.text.GD32E230BOOT_UpgradePackagePayloadDecoding))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GD32E230BOOT_UpgradePackagePayloadDecoding
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_UpGradePayloadProcess
</UL>

<P><STRONG><a name="[56]"></a>GD32E230_TestLedInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, main.o(.text.GD32E230_TestLedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GD32E230_TestLedInit &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_ResourceInit
</UL>

<P><STRONG><a name="[36]"></a>JumpToUserApplication</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, main.o(.text.JumpToUserApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = JumpToUserApplication &rArr; dma_channel_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_disable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230BOOT_1sOverTimePorcess
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Boot_ParseReceiveModbusData
</UL>

<P><STRONG><a name="[5e]"></a>GD32E23X_Modbus_CommunicateResponseInformation</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, usart.o(.text.GD32E23X_Modbus_CommunicateResponseInformation))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = GD32E23X_Modbus_CommunicateResponseInformation &rArr; COMMON_ConvertHex2Ascii
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendDataViaUSART0DmaChannel
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_GeneratorU16bitsCRCCheckCode
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_GeneratorLRCCheckCode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_ConvertHex2Ascii
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_Bits16Convert2Bits8
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E23X_Modbus_UpgradeResponseProcess
</UL>

<P><STRONG><a name="[28]"></a>GD32E23X_Modbus_ModbusTimer</STRONG> (Thumb, 560 bytes, Stack size 56 bytes, usart.o(.text.GD32E23X_Modbus_ModbusTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = GD32E23X_Modbus_ModbusTimer &rArr; COMMON_ConverAscii2CommonMode &rArr; COMMON_GeneratorLRCCheckCode
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_GeneratorU16bitsCRCCheckCode
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMMON_ConverAscii2CommonMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usart.o(.text.USART0_IRQHandler)
</UL>
<P><STRONG><a name="[76]"></a>USART_CommunicateControlPinInit</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, usart.o(.text.USART_CommunicateControlPinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART_CommunicateControlPinInit &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_CommunicateInitial
</UL>

<P><STRONG><a name="[5b]"></a>GD32E230_Systick_TimerControlInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, gd32e230_systick.o(.text.GD32E230_Systick_TimerControlInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GD32E230_Systick_TimerControlInit
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_Systick_Config
</UL>

<P><STRONG><a name="[5a]"></a>SysTick_Config</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gd32e230_systick.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GD32E230_Systick_Config
</UL>

<P><STRONG><a name="[69]"></a>__NVIC_SetPriority</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gd32e230_systick.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[8e]"></a>system_clock_72m_irc8m</STRONG> (Thumb, 228 bytes, Stack size 12 bytes, system_gd32e230.o(.text.system_clock_72m_irc8m))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = system_clock_72m_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[6a]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32e230.o(.text.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = system_clock_config &rArr; system_clock_72m_irc8m
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_72m_irc8m
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8d]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, gd32e230_misc.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[8c]"></a>__NVIC_SetPriority</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, gd32e230_misc.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
